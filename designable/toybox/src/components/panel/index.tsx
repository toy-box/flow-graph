import React, { useCallback } from 'react';
import { useFlow } from '../../hooks';

const STAND_SIZE = 56;

export const Panel = () => {
  const flow = useFlow() as any;
  const init = useCallback(() => {
    flow.setFlowNode([
      {
        id: '001',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        component: 'ExtendNode',
        targets: ['002'],
      },
      {
        id: '002',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        label: '决策',
        component: 'DecisionNode',
        onClick: () => console.log('决策'),
      },
    ]);
  }, [flow]);
  const update = useCallback(() => {
    flow.setFlowNode([
      {
        id: '001',
        type: 'begin',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['100'],
        component: 'StartNode',
      },
      {
        id: '100',
        type: 'cycleBegin',
        cycleBackTarget: '101',
        cycleEndTarget: '102',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['103'],
      },
      {
        id: '101',
        type: 'cycleBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['102'],
        component: 'ExtendNode',
      },
      {
        id: '103',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['201'],
        component: 'ExtendNode',
      },
      {
        id: '201',
        type: 'forkBegin',
        forkEndTarget: '204',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['202', '203'],
      },
      {
        id: '202',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['204'],
        component: 'ExtendNode',
      },
      {
        id: '203',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['211'],
        component: 'ExtendNode',
      },
      {
        id: '211',
        type: 'forkBegin',
        forkEndTarget: '214',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['212', '213'],
      },
      {
        id: '212',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['214'],
        component: 'ExtendNode',
      },
      {
        id: '213',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['214'],
        component: 'ExtendNode',
      },
      {
        id: '214',
        type: 'forkEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['204'],
        component: 'ExtendNode',
      },
      {
        id: '204',
        type: 'forkEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['300'],
        component: 'ExtendNode',
      },
      {
        id: '300',
        type: 'cycleBegin',
        cycleBackTarget: '301',
        cycleEndTarget: '101',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['311'],
      },
      {
        id: '311',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['321'],
        component: 'ExtendNode',
      },
      {
        id: '321',
        type: 'cycleBegin',
        cycleBackTarget: '322',
        cycleEndTarget: '323',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['322'],
      },
      {
        id: '322',
        type: 'cycleBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['323'],
        component: 'ExtendNode',
      },
      {
        id: '323',
        type: 'cycleEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['312'],
        component: 'ExtendNode',
      },
      {
        id: '312',
        type: 'cycleBegin',
        cycleBackTarget: '313',
        cycleEndTarget: '301',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['331'],
      },
      {
        id: '331',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['501'],
        component: 'ExtendNode',
      },
      {
        id: '501',
        type: 'forkBegin',
        forkEndTarget: '504',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['502', '503'],
      },
      {
        id: '502',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['504'],
        component: 'ExtendNode',
      },
      {
        id: '503',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['504'],
        component: 'ExtendNode',
      },
      {
        id: '504',
        type: 'forkEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['332'],
        component: 'ExtendNode',
      },
      {
        id: '332',
        type: 'cycleBegin',
        cycleBackTarget: '333',
        cycleEndTarget: '313',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['341'],
      },
      {
        id: '341',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['342'],
        component: 'ExtendNode',
      },
      {
        id: '342',
        type: 'cycleBegin',
        cycleBackTarget: '343',
        cycleEndTarget: '333',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['343'],
      },
      {
        id: '343',
        type: 'cycleBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['333'],
        component: 'ExtendNode',
      },
      {
        id: '333',
        type: 'cycleBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['313'],
        component: 'ExtendNode',
      },
      {
        id: '313',
        type: 'cycleBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['301'],
        component: 'ExtendNode',
      },
      {
        id: '301',
        type: 'cycleBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['101'],
        component: 'ExtendNode',
      },
      {
        id: '102',
        type: 'cycleEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['400'],
        component: 'ExtendNode',
      },
      {
        id: '400',
        type: 'end',
        width: STAND_SIZE,
        height: STAND_SIZE,
        component: 'EndNode',
      },
    ]);
  }, []);
  return (
    <div>
      <button onClick={init}>init</button>
      <button onClick={update}>update</button>
    </div>
  );
};
