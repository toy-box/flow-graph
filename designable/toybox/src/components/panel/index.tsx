import React, { useCallback } from 'react';
import { useFlow } from '../../hooks';

const BASE_SIZE = 30;
const STAND_SIZE = BASE_SIZE * 2;
const LABEL_SIZE = BASE_SIZE * 3;

export const Panel = () => {
  const flow = useFlow() as any;
  const init = useCallback(() => {
    flow.setFlowNode([
      {
        id: '000',
        type: 'begin',
        width: STAND_SIZE,
        height: STAND_SIZE,
        component: 'StartNode',
        targets: ['002'],
      },
      {
        id: '002',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        label: '决策',
        component: 'DecisionNode',
        targets: [
          { id: '003', label: 'goto 003' },
          { id: '005', label: 'goto 005' },
        ],
      },
      {
        id: '003',
        type: 'forward',
        width: STAND_SIZE / 2,
        height: STAND_SIZE / 2,
        component: 'ExtendNode',
        targets: ['004'],
      },
      {
        id: '004',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        label: 'Action1',
        component: 'ActionNode',
        targets: ['004-1'],
      },
      {
        id: '004-1',
        type: 'forward',
        width: STAND_SIZE / 2,
        height: STAND_SIZE / 2,
        label: 'Action-004-1',
        component: 'ExtendNode',
        targets: ['004-2'],
      },
      {
        id: '004-2',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        label: 'Action-004-2',
        component: 'ActionNode',
        targets: ['004-3'],
      },
      {
        id: '004-3',
        type: 'forward',
        width: STAND_SIZE / 2,
        height: STAND_SIZE / 2,
        label: 'Action-004-3',
        component: 'ExtendNode',
        targets: ['004-4'],
      },
      {
        id: '004-4',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        label: 'Action-004-4',
        component: 'ActionNode',
      },
      {
        id: '005',
        type: 'forward',
        width: STAND_SIZE / 2,
        height: STAND_SIZE / 2,
        component: 'ExtendNode',
        targets: ['006'],
      },
      {
        id: '006',
        type: 'loopBegin',
        width: STAND_SIZE,
        height: STAND_SIZE,
        label: 'LoopNode',
        loopBackTarget: '011',
        loopEndTarget: '012',
        component: 'LoopNode',
        targets: ['007'],
      },
      {
        id: '007',
        type: 'forward',
        width: STAND_SIZE / 2,
        height: STAND_SIZE / 2,
        component: 'ExtendNode',
        targets: ['008'],
      },
      {
        id: '008',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        label: '决策2',
        component: 'ActionNode',
        targets: ['011'],
      },
      {
        id: '011',
        type: 'loopBack',
        width: STAND_SIZE / 2,
        height: STAND_SIZE / 2,
        component: 'ExtendNode',
        targets: ['012'],
      },
      {
        id: '012',
        type: 'loopEnd',
        width: STAND_SIZE / 2,
        height: STAND_SIZE / 2,
        component: 'ExtendNode',
      },
    ]);
  }, [flow]);
  const update = useCallback(() => {
    flow.setFlowNode([
      {
        id: '001',
        type: 'begin',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['100'],
        component: 'StartNode',
      },
      {
        id: '100',
        type: 'loopBegin',
        loopBackTarget: '101',
        loopEndTarget: '102',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['103'],
      },
      {
        id: '101',
        type: 'loopBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['102'],
        component: 'ExtendNode',
      },
      {
        id: '103',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['201'],
        component: 'ExtendNode',
      },
      {
        id: '201',
        type: 'decisionBegin',
        decisionEndTarget: '204',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['2002', '2003'],
      },
      {
        id: '202',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['204'],
        component: 'ExtendNode',
      },
      {
        id: '203',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['211'],
        component: 'ExtendNode',
      },
      {
        id: '2002',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['202'],
        component: 'LabelNode',
      },
      {
        id: '2003',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['203'],
        component: 'LabelNode',
      },
      {
        id: '211',
        type: 'decisionBegin',
        decisionEndTarget: '214',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['212', '213'],
      },
      {
        id: '212',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['214'],
        component: 'ExtendNode',
      },
      {
        id: '213',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['214'],
        component: 'ExtendNode',
      },
      {
        id: '214',
        type: 'decisionEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['204'],
        component: 'ExtendNode',
      },
      {
        id: '204',
        type: 'decisionEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['300'],
        component: 'ExtendNode',
      },
      {
        id: '300',
        type: 'loopBegin',
        loopBackTarget: '301',
        loopEndTarget: '101',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['311'],
      },
      {
        id: '311',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['321'],
        component: 'ExtendNode',
      },
      {
        id: '321',
        type: 'loopBegin',
        loopBackTarget: '3220',
        loopEndTarget: '323',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['322'],
      },
      {
        id: '322',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['3220'],
        component: 'LabelNode',
      },
      {
        id: '3223',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['323'],
        component: 'LabelNode',
      },
      {
        id: '3220',
        type: 'loopBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['3223'],
        component: 'ExtendNode',
      },
      {
        id: '323',
        type: 'loopEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['312'],
        component: 'ExtendNode',
      },
      {
        id: '312',
        type: 'loopBegin',
        loopBackTarget: '313',
        loopEndTarget: '301',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['331'],
      },
      {
        id: '331',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['501'],
        component: 'ExtendNode',
      },
      {
        id: '501',
        type: 'decisionBegin',
        decisionEndTarget: '504',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['502', '503'],
      },
      {
        id: '502',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['504'],
        component: 'ExtendNode',
      },
      {
        id: '503',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['504'],
        component: 'ExtendNode',
      },
      {
        id: '504',
        type: 'decisionEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['332'],
        component: 'ExtendNode',
      },
      {
        id: '332',
        type: 'loopBegin',
        loopBackTarget: '333',
        loopEndTarget: '313',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['341'],
      },
      {
        id: '341',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['342'],
        component: 'ExtendNode',
      },
      {
        id: '342',
        type: 'loopBegin',
        loopBackTarget: '343',
        loopEndTarget: '333',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['343'],
      },
      {
        id: '343',
        type: 'loopBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['333'],
        component: 'ExtendNode',
      },
      {
        id: '333',
        type: 'loopBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['313'],
        component: 'ExtendNode',
      },
      {
        id: '313',
        type: 'loopBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['301'],
        component: 'ExtendNode',
      },
      {
        id: '301',
        type: 'loopBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['101'],
        component: 'ExtendNode',
      },
      {
        id: '102',
        type: 'loopEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['400'],
        component: 'ExtendNode',
      },
      {
        id: '400',
        type: 'end',
        width: STAND_SIZE,
        height: STAND_SIZE,
        component: 'EndNode',
      },
    ]);
  }, []);
  const simble = useCallback(() => {
    flow.setFlowNode([
      {
        id: '001',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        component: 'ExtendNode',
        targets: ['201'],
      },
      {
        id: '201',
        type: 'decisionBegin',
        decisionEndTarget: '301',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['2002', '2003'],
      },
      {
        id: '202',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['301'],
        component: 'DecisionNode',
      },
      // {
      //   id: '203',
      //   type: 'forward',
      //   width: STAND_SIZE,
      //   height: STAND_SIZE,
      //   targets: ['204'],
      //   component: 'ExtendNode',
      // },
      {
        id: '2002',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['20020'],
        component: 'LabelNode',
      },
      {
        id: '20020',
        type: 'decisionBegin',
        decisionEndTarget: '202',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['20021', '20022'],
      },
      {
        id: '20021',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['202'],
        component: 'LabelNode',
      },
      {
        id: '20022',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['202'],
        component: 'LabelNode',
      },
      {
        id: '2003',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['301'],
        component: 'LabelNode',
      },
      // {
      //   id: '204',
      //   type: 'decisionEnd',
      //   width: STAND_SIZE,
      //   height: STAND_SIZE,
      //   targets: ['300'],
      //   component: 'ExtendNode',
      // },
      {
        id: '301',
        type: 'loopBegin',
        loopBackTarget: '3021',
        loopEndTarget: '303',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['302'],
      },
      {
        id: '302',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['3020'],
        component: 'LabelNode',
      },
      {
        id: '3020',
        type: 'forward',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['3021'],
        component: 'DecisionNode',
      },
      {
        id: '3021',
        type: 'loopBack',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['303'],
        component: 'DecisionNode',
      },
      {
        id: '303',
        type: 'loopEnd',
        width: STAND_SIZE,
        height: STAND_SIZE,
        targets: ['end'],
        component: 'LabelNode',
      },
      {
        id: 'end',
        type: 'end',
        width: STAND_SIZE,
        height: STAND_SIZE,
        component: 'EndNode',
      },
    ]);
  }, [flow]);
  return (
    <div>
      <button onClick={init}>init</button>
      <button onClick={update}>update</button>
      <button onClick={simble}>simble</button>
    </div>
  );
};
